{"version":3,"file":"RegisterContainer.jsx","sourceRoot":"","sources":["RegisterContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { } from 'react'\nimport * as Yup from 'yup';\nimport { useAppDispatch } from 'hooks/hooks';\nimport logoWColor from '../../assets/xoyTicketColorFont.png'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { startSignUp } from '../../store/auth/thunks'\ntype RegisterContainerProps = {\n    setIsRegistered: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const RegisterContainer = ({ setIsRegistered }: RegisterContainerProps) => {\n\n\n\n\n    const dispatch = useAppDispatch();\n    return (\n        <div className=\"loginContainer__card__leftside\">\n            <div className=\"loginContainer__card__leftside__logo\">\n                <img src={logoWColor} alt=\"logo\" />\n            </div>\n            <h2\n                className=\"loginContainer__card__leftside__title\"\n            >\n                Descarga tus boletos\n            </h2>\n\n            <p className=\"loginContainer__card__leftside__subtitle\">\n                Descarga tus boletos en formato PDF facilmente.\n            </p>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    name: '',\n                    folio: '',\n                }}\n                validationSchema={Yup.object().shape({\n                    name: Yup.string()\n                        .required('El nombre es obligatorio')\n                        .matches(/^[a-zA-Z\\u00C0-\\u017F\\s]+$/, 'Ingrese un nombre valido'),\n\n                    folio: Yup.number()\n                        .required('El folio es obligatorio')\n                        .min(1, 'El folio debe ser mayor a 0')\n                        .positive('El folio debe ser mayor a 0'),\n\n                    email: Yup.string()\n                        .email('Email no válido')\n                        .required('El email es obligatorio'),\n                    password: Yup.string()\n                        .required('La contraseña es obligatoria'),\n\n\n                })}\n                onSubmit={(values, { setSubmitting }) => {\n                    dispatch(startSignUp({\n                        correo: values.email,\n                        contrasena: values.password,\n                        nombre: values.name,\n                        folio: values.folio.toString(),\n                    }))\n                }}\n            >\n\n                {({ errors, touched }) => (\n                    <Form>\n                        <div className='field'>\n                            <Field\n                                name=\"name\"\n                                placeholder='Introduce tu nombre'\n                                className=\"input\"\n                            />\n                            <ErrorMessage name=\"name\" component=\"span\"\n                                className=\"error\"\n                            />\n                        </div>\n                        <div className='field'>\n                            <Field\n                                name=\"folio\"\n                                placeholder='Introduce tu folio'\n                                className=\"input\"\n                                type=\"number\"\n                            />\n                            <ErrorMessage name=\"folio\" component=\"span\"\n                                className=\"error\"\n                            />\n                        </div>\n                        <div className='field'>\n                            <Field\n                                name=\"email\"\n                                placeholder='Introduce tu correo electronico'\n                                className=\"input\"\n                            />\n                            <ErrorMessage name=\"email\" component=\"span\"\n                                className=\"error\"\n                            />\n                        </div>\n                        <div className='field'>\n\n                            <Field\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder='Introduce tu contraseña'\n                                className=\"input\"\n                            />\n                            <ErrorMessage name=\"password\" component=\"span\"\n                                className=\"error\" />\n                        </div>\n\n                        <p onClick={() => {\n                            setIsRegistered(false)\n                        }} className=\"loginContainer__card__leftside__register\">¿Ya tienes una cuenta?</p>\n\n                        <button type=\"submit\" className=\"loginContainer__card__leftside__button\">\n                            Registrarse\n                        </button>\n                    </Form>\n\n                )}\n            </Formik>\n\n\n        </div>\n    )\n}\n"]}