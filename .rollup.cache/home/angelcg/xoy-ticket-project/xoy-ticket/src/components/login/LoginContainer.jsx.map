{"version":3,"file":"LoginContainer.jsx","sourceRoot":"","sources":["LoginContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './LoginContainer.scss'\nimport logo from '../../assets/xoyTicketWhite.png'\nimport logoWColor from '../../assets/xoyTicketColorFont.png'\nimport { useAppDispatch } from 'hooks/hooks';\nimport { startLogin } from 'store/auth';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { RegisterContainer } from './RegisterContainer';\nexport const LoginContainer = () => {\n\n\n    const [isRegistered, setIsRegistered] = useState<boolean>(false);\n\n\n\n    const dispatch = useAppDispatch();\n    return (\n        <div className=\"loginContainer\">\n\n            <div className=\"loginContainer__card\">\n\n                {\n                    !isRegistered ?\n                        (\n                            <div className=\"loginContainer__card__leftside\">\n\n                                <div className=\"loginContainer__card__leftside__logo\">\n                                    <img src={logoWColor}  alt=\"logo\" />\n                                </div>\n                              \n                                <h2\n                                    className=\"loginContainer__card__leftside__title\"\n                                >\n                                    Descarga tus boletos\n                                </h2>\n\n                                <p className=\"loginContainer__card__leftside__subtitle\">\n                                    Descarga tus boletos en formato PDF facilmente.\n                                </p>\n\n                                <Formik\n                                    initialValues={{\n                                        email: '',\n                                        password: '',\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                        email: Yup.string()\n                                            .email('Email no válido')\n                                            .required('El email es obligatorio'),\n                                        password: Yup.string()\n                                            .required('La contraseña es obligatoria'),\n\n                                    })}\n                                    onSubmit={(values, { setSubmitting }) => {\n\n                                        dispatch(startLogin({\n                                            correo: values.email,\n                                            contrasena: values.password\n                                        }));\n                                    }}\n                                >\n\n                                    {({ errors, touched }) => (\n                                        <Form>\n                                            <div className='field'>\n                                                <Field\n                                                    name=\"email\"\n                                                    placeholder='Introduce tu correo electronico'\n                                                    className=\"input\"\n                                                />\n                                                <ErrorMessage name=\"email\" component=\"span\"\n                                                    className=\"error\"\n                                                />\n                                            </div>\n                                            <div className='field'>\n\n                                                <Field\n                                                    type=\"password\"\n                                                    name=\"password\"\n                                                    placeholder='Introduce tu contraseña'\n                                                    className=\"input\"\n                                                />\n                                                <ErrorMessage name=\"password\" component=\"span\"\n                                                    className=\"error\" />\n                                            </div>\n\n                                            <p onClick={() => {\n                                                setIsRegistered(true)\n                                            }} className=\"loginContainer__card__leftside__register\">¿Todavía no tienes cuenta?</p>\n\n                                            <button type=\"submit\" className=\"loginContainer__card__leftside__button\">\n                                                Iniciar sesión\n                                            </button>\n                                        </Form>\n\n                                    )}\n                                </Formik>\n\n\n                            </div>\n                        )\n                        :\n                        <RegisterContainer setIsRegistered={setIsRegistered} />\n\n                }\n\n\n                <div className=\"loginContainer__card__rightside\">\n                    <img src={logo} alt=\"\" />\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n\n\n"]}