{"version":3,"file":"AppRouter.jsx","sourceRoot":"","sources":["AppRouter.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAChD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM,UAAU,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEjC,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAG1B,MAAM,QAAQ,GAAG,cAAc,EAAE,CAAA;IACjC,SAAS,CAAC,GAAG,EAAE;QACX,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAA;IAC1B,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAEd,OAAO,CACH,CAAC,aAAa,CACV;YAAA,CAAC,MAAM,CAEH;;gBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CACrB,CAAC,YAAY,CACT;wBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,AAAD,EAAG,CAAC,EACpC;wBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,AAAD,EAAG,CAAC,EAC1D;wBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,AAAD,EAAG,CAAC,EACxC;oBAAA,EAAE,YAAY,CAAC,CAClB,EAGD;;gBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAC3B,CAAC,WAAW,CAER;;wBAAA,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,AAAD,EAAG,CAAC,EAGvC;;;oBAAA,EAAE,WAAW,CAAC,CACjB,EAGL;;YAAA,EAAE,MAAM,CAGZ;;;QAAA,EAAE,aAAa,CAAC,CAEnB,CAAA;AAEL,CAAC,CAAA","sourcesContent":["import { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nimport { useAppDispatch } from '../hooks/hooks';\nimport { checkToken } from \"../store/auth\";\nimport { useEffect } from 'react';\n\nimport { Login, Pdf, Ticket, } from '../pages';\nimport { SeatList } from 'pages';\n\nexport const AppRouter = () => {\n\n\n    const dispatch = useAppDispatch()\n    useEffect(() => {\n        dispatch(checkToken())\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n            <Routes>\n\n                <Route path=\"/*\" element={\n                    <PrivateRoute>\n                        <Route path=\"/\" element={<Ticket />} />\n                        <Route path=\"/seats/:idTransaction\" element={<SeatList />} />\n                        <Route path=\"/pdf\" element={<Pdf />} />\n                    </PrivateRoute>\n                }\n                />\n\n                <Route path=\"/login/*\" element={\n                    <PublicRoute>\n\n                        <Route path=\"/\" element={<Login />} />\n\n\n                    </PublicRoute>\n                }\n                />\n\n            </Routes>\n\n\n        </BrowserRouter>\n\n    )\n\n}"]}