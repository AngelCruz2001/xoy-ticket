{"version":3,"file":"ticketSlice.js","sourceRoot":"","sources":["ticketSlice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAO/C,MAAM,YAAY,GAAgB;IAC9B,YAAY,EAAE,IAAI;IAClB,OAAO,EAAE,IAAI;CAChB,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,WAAW,CAAC;IACnC,IAAI,EAAE,MAAM;IACZ,YAAY;IACZ,QAAQ,EAAE;QACN,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAC1B,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QACnC,CAAC;QACD,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;YACpB,KAAK,GAAG,YAAY,CAAC;QACzB,CAAC;KACJ;CACJ,CAAC,CAAC;AAGH,+DAA+D;AAC/D,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,WAAW,CAAC,OAAO,CAAC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { Datum, TicketResp } from '../../interfaces/ticket.resp';\n\ninterface TicketState {\n    errorMessage: string | null;\n    tickets: Datum[] | null;\n}\nconst initialState: TicketState = {\n    errorMessage: null,\n    tickets: null,\n};\n\nexport const ticketSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setTickets: (state, action) => {\n            state.tickets = action.payload;\n        },\n        clearTickets: (state) => {\n            state = initialState;\n        }\n    }\n});\n\n\n// Action creators are generated for each case reducer function\nexport const { setTickets } = ticketSlice.actions;"]}