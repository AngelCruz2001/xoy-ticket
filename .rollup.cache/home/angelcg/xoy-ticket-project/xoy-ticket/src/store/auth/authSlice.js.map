{"version":3,"file":"authSlice.js","sourceRoot":"","sources":["authSlice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAQ/C,MAAM,YAAY,GAAc;IAC5B,MAAM,EAAE,UAAU;IAClB,IAAI,EAAE,IAAI;IACV,YAAY,EAAE,IAAI;IAClB,KAAK,EAAE,IAAI;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,WAAW,CAAC;IACjC,IAAI,EAAE,MAAM;IACZ,YAAY;IACZ,QAAQ,EAAE;QAEN,KAAK,EAAE,CAAC,KAAgB,EAAE,EAAC,OAAO,EAAC,EAAI,EAAE;YACrC,KAAK,CAAC,MAAM,GAAG,eAAe,CAAC;YAC/B,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;QAED,gBAAgB,EAAE,CAAC,KAAgB,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE;YAChD,KAAK,CAAC,YAAY,GAAG,OAAO,CAAC;QACjC,CAAC;QAED,MAAM,EAAE,CAAC,KAAgB,EAAE,EAAE;YACzB,KAAK,CAAC,MAAM,GAAG,mBAAmB,CAAC;YACnC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YAClB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC;YAC1B,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,mBAAmB,EAAE,CAAC,KAAgB,EAAE,EAAE;YACtC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;QAC9B,CAAC;KACJ;CACJ,CAAC,CAAC;AAGH,+DAA+D;AAC/D,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,mBAAmB,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { User } from '../../interfaces/auth.resp';\ninterface AuthState {\n    status: 'checking' | 'not-authenticated' | 'authenticated';\n    errorMessage: string | null;\n    user: User | null;\n    token: string | null;\n}\nconst initialState: AuthState = {\n    status: 'checking',\n    user: null,\n    errorMessage: null,\n    token: null,\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n\n        login: (state: AuthState, {payload}  ) => {\n            state.status = 'authenticated';\n            state.user = payload.user;\n            state.token = payload.token;\n        },\n\n        sendErrorMessage: (state: AuthState, { payload }) => {\n            state.errorMessage = payload;\n        },\n\n        logout: (state: AuthState) => {\n            state.status = 'not-authenticated';\n            state.user = null;\n            state.errorMessage = null;\n            state.token = null;\n        },\n\n        checkingCredentials: (state: AuthState) => {\n            state.status = 'checking';\n        },\n    }\n});\n\n\n// Action creators are generated for each case reducer function\nexport const { login, sendErrorMessage, logout, checkingCredentials } = authSlice.actions;"]}