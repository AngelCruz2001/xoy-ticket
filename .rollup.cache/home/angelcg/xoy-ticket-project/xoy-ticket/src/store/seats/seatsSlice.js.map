{"version":3,"file":"seatsSlice.js","sourceRoot":"","sources":["seatsSlice.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAM/C,MAAM,YAAY,GAAc;IAC5B,KAAK,EAAE,IAAI;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,WAAW,CAAC;IAClC,IAAI,EAAE,MAAM;IACZ,YAAY;IACZ,QAAQ,EAAE;QACN,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACxB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QACjC,CAAC;QACD,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE;YAClB,KAAK,GAAG,YAAY,CAAC;QACzB,CAAC;KACJ;CACJ,CAAC,CAAC;AAGH,+DAA+D;AAC/D,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { Seat } from 'interfaces/seats.resp';\n\ninterface SeatState {\n    seats: Seat[] | null;\n}\nconst initialState: SeatState = {\n    seats: null,\n};\n\nexport const seatsSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setSeats: (state, action) => {\n            state.seats = action.payload;\n        },\n        clearSeats: (state) => {\n            state = initialState;\n        }\n    }\n});\n\n\n// Action creators are generated for each case reducer function\nexport const { setSeats } = seatsSlice.actions;"]}